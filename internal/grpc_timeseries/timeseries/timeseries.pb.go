// Code generated by protoc-gen-go. DO NOT EDIT.
// source: timeseries.proto

package timeseries

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DataPoint struct {
	Timestamp            int64    `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Value                float64  `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DataPoint) Reset()         { *m = DataPoint{} }
func (m *DataPoint) String() string { return proto.CompactTextString(m) }
func (*DataPoint) ProtoMessage()    {}
func (*DataPoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_8f432f906d7ab9cb, []int{0}
}

func (m *DataPoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataPoint.Unmarshal(m, b)
}
func (m *DataPoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataPoint.Marshal(b, m, deterministic)
}
func (m *DataPoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataPoint.Merge(m, src)
}
func (m *DataPoint) XXX_Size() int {
	return xxx_messageInfo_DataPoint.Size(m)
}
func (m *DataPoint) XXX_DiscardUnknown() {
	xxx_messageInfo_DataPoint.DiscardUnknown(m)
}

var xxx_messageInfo_DataPoint proto.InternalMessageInfo

func (m *DataPoint) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *DataPoint) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type TimeSeries struct {
	Key                  string       `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Data                 []*DataPoint `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *TimeSeries) Reset()         { *m = TimeSeries{} }
func (m *TimeSeries) String() string { return proto.CompactTextString(m) }
func (*TimeSeries) ProtoMessage()    {}
func (*TimeSeries) Descriptor() ([]byte, []int) {
	return fileDescriptor_8f432f906d7ab9cb, []int{1}
}

func (m *TimeSeries) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TimeSeries.Unmarshal(m, b)
}
func (m *TimeSeries) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TimeSeries.Marshal(b, m, deterministic)
}
func (m *TimeSeries) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimeSeries.Merge(m, src)
}
func (m *TimeSeries) XXX_Size() int {
	return xxx_messageInfo_TimeSeries.Size(m)
}
func (m *TimeSeries) XXX_DiscardUnknown() {
	xxx_messageInfo_TimeSeries.DiscardUnknown(m)
}

var xxx_messageInfo_TimeSeries proto.InternalMessageInfo

func (m *TimeSeries) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *TimeSeries) GetData() []*DataPoint {
	if m != nil {
		return m.Data
	}
	return nil
}

type TimeSeriesRequest struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	FromTimestamp        int64    `protobuf:"varint,2,opt,name=from_timestamp,json=fromTimestamp,proto3" json:"from_timestamp,omitempty"`
	ToTimestamp          int64    `protobuf:"varint,3,opt,name=to_timestamp,json=toTimestamp,proto3" json:"to_timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TimeSeriesRequest) Reset()         { *m = TimeSeriesRequest{} }
func (m *TimeSeriesRequest) String() string { return proto.CompactTextString(m) }
func (*TimeSeriesRequest) ProtoMessage()    {}
func (*TimeSeriesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8f432f906d7ab9cb, []int{2}
}

func (m *TimeSeriesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TimeSeriesRequest.Unmarshal(m, b)
}
func (m *TimeSeriesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TimeSeriesRequest.Marshal(b, m, deterministic)
}
func (m *TimeSeriesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimeSeriesRequest.Merge(m, src)
}
func (m *TimeSeriesRequest) XXX_Size() int {
	return xxx_messageInfo_TimeSeriesRequest.Size(m)
}
func (m *TimeSeriesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TimeSeriesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TimeSeriesRequest proto.InternalMessageInfo

func (m *TimeSeriesRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *TimeSeriesRequest) GetFromTimestamp() int64 {
	if m != nil {
		return m.FromTimestamp
	}
	return 0
}

func (m *TimeSeriesRequest) GetToTimestamp() int64 {
	if m != nil {
		return m.ToTimestamp
	}
	return 0
}

func init() {
	proto.RegisterType((*DataPoint)(nil), "timeseries.DataPoint")
	proto.RegisterType((*TimeSeries)(nil), "timeseries.TimeSeries")
	proto.RegisterType((*TimeSeriesRequest)(nil), "timeseries.TimeSeriesRequest")
}

func init() {
	proto.RegisterFile("timeseries.proto", fileDescriptor_8f432f906d7ab9cb)
}

var fileDescriptor_8f432f906d7ab9cb = []byte{
	// 229 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0xc1, 0x4a, 0xc6, 0x30,
	0x10, 0x84, 0x49, 0xa3, 0x42, 0xf7, 0xf7, 0x97, 0x1a, 0x54, 0x8a, 0x28, 0xd4, 0x82, 0x50, 0x2f,
	0x3d, 0xd4, 0x07, 0xf0, 0x22, 0x8a, 0x37, 0x49, 0x7b, 0xf3, 0x20, 0x51, 0x57, 0x08, 0x1a, 0x53,
	0xd3, 0x6d, 0xc1, 0xb7, 0x97, 0x46, 0x68, 0x02, 0xf6, 0x96, 0xcc, 0x4e, 0x66, 0xbe, 0x2c, 0x64,
	0xa4, 0x0d, 0x0e, 0xe8, 0x34, 0x0e, 0x75, 0xef, 0x2c, 0x59, 0x01, 0x41, 0x29, 0x6f, 0x20, 0xbd,
	0x55, 0xa4, 0x1e, 0xad, 0xfe, 0x22, 0x71, 0x06, 0xa9, 0x1f, 0x91, 0x32, 0x7d, 0xce, 0x0a, 0x56,
	0x71, 0x19, 0x04, 0x71, 0x04, 0xbb, 0x93, 0xfa, 0x1c, 0x31, 0x4f, 0x0a, 0x56, 0x31, 0xf9, 0x77,
	0x29, 0x1f, 0x00, 0x3a, 0x6d, 0xb0, 0xf5, 0x71, 0x22, 0x03, 0xfe, 0x81, 0x3f, 0xfe, 0x6d, 0x2a,
	0xe7, 0xa3, 0xb8, 0x82, 0x9d, 0x37, 0x45, 0x2a, 0x4f, 0x0a, 0x5e, 0x6d, 0x9a, 0xe3, 0x3a, 0xa2,
	0x59, 0x8a, 0xa5, 0xb7, 0x94, 0x16, 0x0e, 0x43, 0x94, 0xc4, 0xef, 0x11, 0x07, 0x5a, 0x49, 0xbc,
	0x84, 0x83, 0x77, 0x67, 0xcd, 0x73, 0x40, 0x4d, 0x3c, 0xea, 0x76, 0x56, 0xbb, 0x05, 0xf7, 0x02,
	0xf6, 0xc9, 0x46, 0x26, 0xee, 0x4d, 0x1b, 0xb2, 0x8b, 0xa5, 0x79, 0x8a, 0x0b, 0x5b, 0x74, 0x93,
	0x7e, 0x45, 0x71, 0x07, 0xdb, 0x7b, 0xa4, 0xe8, 0x4f, 0xe7, 0x31, 0xf3, 0x3f, 0xc0, 0xd3, 0x93,
	0xf5, 0xf1, 0xcb, 0x9e, 0x5f, 0xf6, 0xf5, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xa5, 0x71, 0x19,
	0xf9, 0x80, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TimeSeriesServiceClient is the client API for TimeSeriesService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TimeSeriesServiceClient interface {
	GetTimeSeries(ctx context.Context, in *TimeSeriesRequest, opts ...grpc.CallOption) (*TimeSeries, error)
}

type timeSeriesServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewTimeSeriesServiceClient(cc grpc.ClientConnInterface) TimeSeriesServiceClient {
	return &timeSeriesServiceClient{cc}
}

func (c *timeSeriesServiceClient) GetTimeSeries(ctx context.Context, in *TimeSeriesRequest, opts ...grpc.CallOption) (*TimeSeries, error) {
	out := new(TimeSeries)
	err := c.cc.Invoke(ctx, "/timeseries.TimeSeriesService/GetTimeSeries", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TimeSeriesServiceServer is the server API for TimeSeriesService service.
type TimeSeriesServiceServer interface {
	GetTimeSeries(context.Context, *TimeSeriesRequest) (*TimeSeries, error)
}

// UnimplementedTimeSeriesServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTimeSeriesServiceServer struct {
}

func (*UnimplementedTimeSeriesServiceServer) GetTimeSeries(ctx context.Context, req *TimeSeriesRequest) (*TimeSeries, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTimeSeries not implemented")
}

func RegisterTimeSeriesServiceServer(s *grpc.Server, srv TimeSeriesServiceServer) {
	s.RegisterService(&_TimeSeriesService_serviceDesc, srv)
}

func _TimeSeriesService_GetTimeSeries_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TimeSeriesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TimeSeriesServiceServer).GetTimeSeries(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/timeseries.TimeSeriesService/GetTimeSeries",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TimeSeriesServiceServer).GetTimeSeries(ctx, req.(*TimeSeriesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TimeSeriesService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "timeseries.TimeSeriesService",
	HandlerType: (*TimeSeriesServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetTimeSeries",
			Handler:    _TimeSeriesService_GetTimeSeries_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "timeseries.proto",
}
